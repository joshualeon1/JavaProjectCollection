package researchcode;

import java.util.ArrayList;
import java.util.List;

class BPlusTree<Key extends Comparable<Key>, Value> {
    private Node root;
    private int degree;

    public BPlusTree(int degree) {
        this.root = new LeafNode();
        this.degree = degree;
    }

    public Value search(Key key) {
        return root.search(key);
    }

    public void insert(Key key, Value value) {
        root.insert(key, value);
    }

    private abstract class Node {
        List<Key> keys;

        Node() {
            keys = new ArrayList<>();
        }

        abstract Value search(Key key);

        abstract void insert(Key key, Value value);
    }

    private class LeafNode extends Node {
        List<Value> values;
        LeafNode next;

        LeafNode() {
            values = new ArrayList<>();
        }

        @Override
        Value search(Key key) {
            int index = keys.indexOf(key);
            if (index >= 0) {
                return values.get(index);
            }
            return null;
        }

        @Override
        void insert(Key key, Value value) {
            int index = 0;
            while (index < keys.size() && key.compareTo(keys.get(index)) > 0) {
                index++;
            }
            keys.add(index, key);
            values.add(index, value);
        }
    }
}

public class B_Plus_Tree {
    public static void main(String[] args) {
        BPlusTree<Integer, String> tree = new BPlusTree<>(3);
        tree.insert(1, "One");
        tree.insert(2, "Two");
        tree.insert(3, "Three");

        System.out.println(tree.search(2)); // Output: Two
        System.out.println(tree.search(4)); // Output: null
    }
}

